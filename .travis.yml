language: cpp
env:
 # GNU C/C++ Build
 - CC_OVERLOAD=gcc
   CXX_OVERLOAD=g++
 # Clang Build+
 - CC_OVERLOAD=clang
   CXX_OVERLOAD=clang++
 # Clang Static Analysis
 - SCAN_BUILD=1
 # GCov Coverage Build
 - CC_OVERLOAD=gcc
   CXX_OVERLOAD=g++
   CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON"
   COVERAGE=1
before_install:
  - git submodule update --init --recursive
  - sudo apt-add-repository -y ppa:smspillaz/verapp-latest
  - sudo apt-get update -qq
  - sudo apt-get install -qq `cat DEPENDENCIES`
  - if [[ $COVERAGE == 1 ]] ; then sudo pip install cpp-coveralls; fi
script:
  - export CC=${CC_OVERLOAD}
  - export CXX=${CXX_OVERLOAD}
  - mkdir build
  - pushd build
  - if [[ $SCAN_BUILD == 1 ]] ; then
      scan-build cmake .. `echo ${CMAKE_OPTIONS}`;
      scan-build --use-cc=clang --use-c++=clang++ make;
    else
      cmake .. `echo ${CMAKE_OPTIONS}` -DCPP_SUBPROCESS_BOOST_USE_STATIC_LIBS=OFF;
      make;
    fi;
  - pushd tests 
  - ./integration/cpp_subprocess_integration_tests
  - ./acceptance/cpp_subprocess_acceptance_tests
  - popd
  - popd
after_success:
 - if [[ $COVERAGE == 1 ]] ; then
     coveralls -E "(^.*\/cpp-subprocess\/build\/.*$)" -E "(^.*\/cpp-subprocess/\include\/.*$)" -E "(^.*\/cpp-subprocess\/generators\/.*$)";
   fi
